@page "/page/deliveryboylist"
@inject ICustomer _customer
@layout AdminLayout
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject IToastService toastService
@attribute [Authorize]
@*@attribute [Authorize(Roles = "Admin")]*@

<div class="container-fluid">
            <div class="row justify-content-between">



               <div class="col-lg-12 col-md-12">
                   <div class="card card-static-2 mt-30 mb-30">
                       <div class="card-title-2">
										<a href="/page/deliveryboyadd" class="add-btn hover-btn">Add New</a>
									</div>
                           <div class="card-body-table">
                               <div class="table-responsive">
                                   <h2>Deliveryboy List</h2>
                                   <table class="table">
                                       <thead>
                                           <tr>
                                               <th>FirstName</th>
        <th>LastName</th>
        <th>Email</th>
        <th>Mobile</th>
        <th>IsActive</th>
        <th></th>
        <th></th>
                                           </tr>
                                       </thead>
                                       <tbody>
                                           @foreach(var item in listCustomer)
                                           {
                                           <tr>
                                               <td>@item.FirstName</td>
                                               <td>@item.LastName</td>
                                               <td>@item.Email</td>
                                               <td>@item.MobileNo</td>
                                               <td>@item.IsActive</td>
                                               <td><a @onclick="@(()=>Edit(item.CustomerId))">Edit</a> |
<a @onclick="@(()=>Delete(item))">Delete</a></td>
                                           </tr>
                                           }
                                       </tbody>
                                   </table>
</div>
                           </div>
</div>
</div>
            </div>
</div>


@code {
    IList<CustomerMaster> listCustomer = new List<CustomerMaster>();
    protected async override void OnInitialized()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        listCustomer = await _customer.GetAll(4);
        StateHasChanged();
    }
    async void Edit(int id)
    {
        //Snackbar.Add("THIS IS TEST VERSION. YOU CAN NOT ADD,EDIT,DELETE DATA.", Severity.Success);
        NavigationManager.NavigateTo($"/page/deliveryboyedit/{id}");
    }
    async void Delete(CustomerMaster customermaster)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            //Snackbar.Add("THIS IS TEST VERSION. YOU CAN NOT ADD,EDIT,DELETE DATA.", Severity.Success);
            var result = await _customer.Delete(customermaster);
            if (result.IsSuccessStatusCode)
            {
                toastService.ShowSuccess("Successfully Deleted");
                await LoadData();
            }
            else
            {
                toastService.ShowSuccess("Cannot be delete. already in used.");
            }
        }
    }
}
