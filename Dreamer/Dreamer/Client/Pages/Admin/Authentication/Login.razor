@page "/admin/login"
@layout LoginLayout
@inject IStringLocalizer<Resource> localizer
@inject IShippingAddress _shipping
@inject IBillingAddress _billing
@inject ICartService CartService
@inject ILocalStorageService localStorage
@inject IAccountsRepository accountsRepository
@inject ICustomerLogin _customerLogin
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IToastService toastService


<div class="row justify-content-center">
    <div class="col-lg-5">
        <div class="sign-form">
            <div class="sign-inner">
           <div class="sign-logo" id="logo">
								<a href="/"><img src="img/logo.png" alt=""></a>
								<a href="/"><img class="logo-inverse" src="img/logo.png" alt=""></a>
							</div>
    <div class="form-dt">
        <div class="form-inpts checout-address-step">
<EditForm Model="loginInfo" OnValidSubmit="LoginUser">
    <DataAnnotationsValidator />
    <div class="form-title"><h6>Login</h6></div>
    <div class="form-group">
        <label>Email:</label>
        <div>
            <input type="text" class="form-control" @bind="@loginInfo.Email" />
            <ValidationMessage For="@(() => loginInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <input type="password" class="form-control" @bind="@loginInfo.Password" />
            <ValidationMessage For="@(() => loginInfo.Password)" />
        </div>
    </div>
    <div class="form-group">
    <button type="submit" class="btn btn-primary">Login</button>
    </div>
</EditForm>
</div>
 </div>
 </div>
        </div>
    </div>
</div>
@code {
    private LoginInfo loginInfo = new LoginInfo();
    protected async override void OnInitialized()
    {
        loginInfo.Email = string.Empty;
        loginInfo.Password = string.Empty;
        StateHasChanged();
    }
    private async Task LoginUser()
    {
        if (loginInfo.Email == string.Empty)
        {
            toastService.ShowInfo("Type Email Id");
        }
        else if (loginInfo.Password == string.Empty)
        {
            toastService.ShowInfo("Type Password");
        }
        else
        {
            var userToken = await _customerLogin.Login(loginInfo);
            if (userToken != null)
            {
                await loginService.Login(userToken);
                await localStorage.SetItemAsync("email", loginInfo.Email);
                StateHasChanged();
                navigationManager.NavigateTo("/page/dashboard");
            }
            else
            {
                toastService.ShowInfo("Login Failed.");
            }
        }
        StateHasChanged();
    }
}
