@page "/page/userprofile"
@layout AdminLayout
@inject IStringLocalizer<Resource> localizer
@inject ICustomer customer
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IToastService toastService
@using System.IO
@using System.Security.Claims
@attribute [Authorize]
<div class="container-fluid">
                        <h2 class="mt-30 page-title">User Profile</h2>
                        <ol class="breadcrumb mb-30">
                            <li class="breadcrumb-item"><a>Setting</a></li>
                            <li class="breadcrumb-item"><a>Profile</a></li>
                            <li class="breadcrumb-item active">Edit Profile</li>
                        </ol>
                        <div class="row">
							<div class="col-lg-5 col-md-6">
								<div class="card card-static-2 mb-30">
									<div class="card-title-2">
										<h4>Profile</h4>
									</div>
									<div class="card-body-table">
<EditForm Model="userInfo" OnValidSubmit="CreateUser">
    <DataAnnotationsValidator />
    <div class="news-content-right pd-20">
    <div class="form-group">
        <label>First Name:</label>
        <div>
            <input type="text" class="form-control" @bind="@userInfo.FirstName" />
            <ValidationMessage For="@(() => userInfo.FirstName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Last Name:</label>
        <div>
            <input type="text" class="form-control" @bind="@userInfo.LastName" />
            <ValidationMessage For="@(() => userInfo.LastName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Email:</label>
        <div>
            <input type="text" class="form-control" @bind="@userInfo.Email" />
            <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <input type="password" class="form-control" @bind="@userInfo.Password" />
            <ValidationMessage For="@(() => userInfo.Password)" />
        </div>
    </div>
    <div class="form-group">
        <label>Confirm Password:</label>
        <div>
            <input type="password" class="form-control" @bind="@userInfo.ConfirmPassword" />
            <ValidationMessage For="@(() => userInfo.ConfirmPassword)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Update</button>
    </div>
</EditForm>
</div>
 </div>
 </div>
        </div>
    </div>
@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    private CustomerMaster userInfo = new CustomerMaster();
    string Id;
    protected async override void OnInitialized()
    {
        var authState = await authenticationState;
        var user = authState.User;
        Id = user.FindFirst(ClaimTypes.NameIdentifier).Value;
        userInfo = await customer.GetbyId(Convert.ToInt32(Id));
        StateHasChanged();
    }
    private async Task CreateUser()
    {
        userInfo.RoleId = 1;
        userInfo.MobileNo = string.Empty;
        userInfo.Phone = string.Empty;
        userInfo.Address = string.Empty;
        userInfo.Gender = "Male";
        userInfo.Image = string.Empty;
        userInfo.City = string.Empty;
        userInfo.ModifiedOn = DateTime.Now;
        userInfo.IsActive = true;
        var result = await customer.Update(userInfo);
        if (result.IsSuccessStatusCode)
        {
        navigationManager.NavigateTo("/page/dashboard");
        toastService.ShowInfo("Successfully Updated.");
        }
        else
        {
            toastService.ShowInfo("Failed.");
        }
        StateHasChanged();
    }
}
