@page "/page/sliderlist"
@layout AdminLayout
@inject ISlider _area
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject IToastService toastService
@attribute [Authorize]

<div class="container-fluid">
                        <h2 class="mt-30 page-title">Slider</h2>
                        <ol class="breadcrumb mb-30">
                            <li class="breadcrumb-item"><a>Setting</a></li>
                            <li class="breadcrumb-item active">Slider</li>
                        </ol>
                        <div class="row justify-content-between">
							<div class="col-lg-12 col-md-12">
								<div class="card card-static-2 mt-30 mb-30">
									<div class="card-title-2">
																		<a href="/page/slideradd" class="add-btn hover-btn">Add New</a>
									</div>
									<div class="card-body-table">
										<div class="table-responsive">
											@if (listSlider == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table ucp-table table-hover">
            <thead>
                <tr>
                    <th>S.No.</th>
                    <th>Name</th>
                    <th>Cover</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @{
                            int sno = 0;
                 }
                @foreach (var item in listSlider)
                {
                    <tr>
                        <td>@{sno++;}
                            @sno
                            </td>
                        <td>@item.Name</td>
                        <td><img src="@item.Image" width="40" height="40"></td>
                        <td class="action-btns">
															<a href="/page/slideredit/@item.SliderId" class="edit-btn" title="Edit"><i class="fas fa-edit"></i></a> |
                                                            <a @onclick="() => Delete(item)" class="delete-btn" title="Delete"><i class="fas fa-trash-alt"></i></a>
														</td>
                    </tr>
                }
            </tbody>
        </table>
    }
										</div>
									</div>
								</div>
							</div>
                        </div>
                    </div>
@code {
    IList<Slider> listSlider = new List<Slider>();
    protected async override void OnInitialized()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        listSlider = await _area.GetAll();
        StateHasChanged();
    }
    async void Delete(Slider category)
    {
        toastService.ShowSuccess("demo version cannot add delete or modify");
            NavigationManager.NavigateTo("/page/sliderlist");
        //bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        //if (confirmed)
        //{
        //    var result = await _area.Delete(category);
        //    if (result.IsSuccessStatusCode)
        //    {
        //        toastService.ShowSuccess("Successfully Deleted");
        //        await LoadData();
        //    }
        //    else
        //    {
        //        toastService.ShowSuccess("Cannot be delete. already in used.");
        //    }
        //}
    }
}
